<script src="/socket.io/socket.io.js"></script>

<div class="container">

    <div class="page-header text-center">
        <h1><span class="fa fa-anchor"></span> Chat Page</h1>
		<a href="/profile" class="btn btn-default btn-sm">Profile</a>
		<a href="/management" class="btn btn-default btn-sm" id="management">Management</a>
		<a href="/logout" class="btn btn-warning btn-sm">Logout</a>
	</div>
	<input id="Id" type="hidden" value="{{user.id}}"/>
	<input id="Role" type="hidden" value="{{user.Role}}"/>
	<input id="DisplayName" type="hidden" value="{{user.DisplayName}}"/>
	<input id="username" type="hidden" value="{{user.UserName}}"/>


	<div class="row">
		<ul id="messages"></ul>
		<div id="message">
			<input type="text" id="msg" placeholder="type here to send"/>
			<button id="msgbutton" class="btn btn-default btn-success btn-sm " disabled>Send</button>
		</div>
	</div>
</div>

<script>
	var pi = 3.14159265358979323846264338327950288419716939937510;
	var UserName = $('#username').val();
	var UserId = $('#Id').val();
	var socket = io.connect();
	var geolocationEnabled = false;
	var sendAllowed = false;

	socket.emit("join", UserName);

	socket.on('join', function(User){
		// $('#messages').append( '<li>The user ' + User.UserName + ' with name ' + User.DisplayName + ' joined the chat</li>');
		$('#messages').append( '<li>' + User.DisplayName + ' joined the chat.<a onclick="getUserList()">User list</a></li>');
	});

	socket.on('msg', function(line){
		var datearray = line.Location.Datetime.split("T");
		var date = datearray[0];
		var time = datearray[1].split(".")[0];
		$('#messages').append( '<li><a onclick="getPlaces(' + line.Location.Latitude + ', ' + line.Location.Longitude + ')">['+ date + ":" + time + '] ' + line.User.DisplayName + ':</a> ' + line.Body + '</li>');	
	});

	socket.on('disconnect', function(User){
		if (User.DisplayName != undefined && User.DisplayName != null)
			$('#messages').append( '<li>' + User.DisplayName + ' left the chat</li>');
	});

	function send(){
		if(sendAllowed){
	    	navigator.geolocation.getCurrentPosition(function(data){
	    		var lat = data.coords.latitude;
	    		var lon = data.coords.longitude;
	    		var id = UserId;
	    		var body = $('#msg').val();
	    		socket.emit('send msg', body, id, lat , lon);
	    		$('input').val('');
	    		$('#msgbutton').prop('disabled', true);
    			sendAllowed = false;
	   		});
		}
	}

	$("#msgbutton").click(function(){
		send();
	});
	$('#msg').keypress(function(e){
		if(e.which == 13){
			send();
		}
	});
    $('#msg').keyup(function() {
        if($(this).val() != '' && geolocationEnabled) {
    		$('#msgbutton').removeAttr('disabled');
    		sendAllowed = true;
		} else{
			$('#msgbutton').prop('disabled', true);
			sendAllowed = false;
        }
     });

    function getPlaces(lat,longi){
    	
    	var latitude = lat/(pi/180);
    	var longitude = longi/(pi/180);
    	console.log('clicked for places ' + latitude + ', ' + longitude);
    }

    function getUserList(){
    	console.log("Print users");
    }

	$(document).ready(function(){
		

	    if($('#Role').val()!= "Admin"){
	        $('#management').hide();
	    }
	    

	    if(navigator.geolocation){
	    	navigator.geolocation.getCurrentPosition(function(){
	    		geolocationEnabled = true;
	    	}, function(error){
	    		switch(error.code) {
		        case error.PERMISSION_DENIED:
		            alert("Geolocation must be enabled to chat");
		            break;
		        case error.POSITION_UNAVAILABLE:
		            alert("Location information is unavailable.");
		            break;
		        case error.TIMEOUT:
		            alert("The request to get user location timed out.");
		            break;
		        case error.UNKNOWN_ERROR:
		            alert("An unknown error occurred.");
		            break;
		   		}
	    	});
	    } else{
	    	alert('Your browser doesn\'t support location');
	    	geolocationEnabled = false;
	    }
	    
	        
	    
		
    });
</script>



